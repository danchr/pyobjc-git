# This file is generated by objective.metadata
#
# Last update: Tue Jun  4 23:07:58 2019

import objc, sys

if sys.maxsize > 2 ** 32:
    def sel32or64(a, b): return b
else:
    def sel32or64(a, b): return a
if sys.byteorder == 'little':
    def littleOrBig(a, b): return a
else:
    def littleOrBig(a, b): return b

misc = {
}
constants = '''$$'''
enums = '''$$'''
misc.update({})
r = objc.registerMetaDataForSelector
objc._updatingMetadata(True)
try:
    r(b'WFConnectionMonitor', b'connectionStatusHandler', {'retval': {'callable': {'args': {0: {'type': '^v'}, 1: {'type': '@'}}, 'retval': {'type': b'v'}}}})
    r(b'WFConnectionMonitor', b'invalidationHandler', {'retval': {'callable': {'args': {0: {'type': '^v'}}, 'retval': {'type': b'v'}}}})
    r(b'WFConnectionMonitor', b'setConnectionStatusHandler:', {'arguments': {2: {'callable': {'args': {0: {'type': '^v'}, 1: {'type': '@'}}, 'retval': {'type': b'v'}}}}})
    r(b'WFConnectionMonitor', b'setInvalidationHandler:', {'arguments': {2: {'callable': {'args': {0: {'type': '^v'}}, 'retval': {'type': b'v'}}}}})
finally:
    objc._updatingMetadata(False)
expressions = {}

# END OF FILE
