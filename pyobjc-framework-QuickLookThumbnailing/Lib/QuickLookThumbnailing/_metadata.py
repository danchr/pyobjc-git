# This file is generated by objective.metadata
#
# Last update: Tue Jun 11 21:52:55 2019

import objc, sys

if sys.maxsize > 2 ** 32:
    def sel32or64(a, b): return b
else:
    def sel32or64(a, b): return a
if sys.byteorder == 'little':
    def littleOrBig(a, b): return a
else:
    def littleOrBig(a, b): return b

misc = {
}
constants = '''$QLThumbnailGeneratorErrorDomain$'''
enums = '''$QLThumbnailGenerationRequestRepresentationTypeAll@18446744073709551615$QLThumbnailGenerationRequestRepresentationTypeIcon@1$QLThumbnailGenerationRequestRepresentationTypeLowQualityThumbnail@2$QLThumbnailGenerationRequestRepresentationTypeThumbnail@4$QLThumbnailGeneratorErrorGenerationFailed@0$QLThumbnailGeneratorErrorNoCachedThumbnail@2$QLThumbnailGeneratorErrorNoCloudThumbnail@3$QLThumbnailGeneratorErrorRequestCancelled@5$QLThumbnailGeneratorErrorRequestInvalid@4$QLThumbnailGeneratorErrorSavingToURLFailed@1$QLThumbnailRepresentationTypeIcon@0$QLThumbnailRepresentationTypeLowQualityThumbnail@1$QLThumbnailRepresentationTypeThumbnail@2$'''
misc.update({})
r = objc.registerMetaDataForSelector
objc._updatingMetadata(True)
try:
    r(b'QLThumbnailGenerationRequest', b'iconMode', {'retval': {'type': b'Z'}})
    r(b'QLThumbnailGenerationRequest', b'setIconMode:', {'arguments': {2: {'type': b'Z'}}})
finally:
    objc._updatingMetadata(False)
expressions = {}

# END OF FILE
